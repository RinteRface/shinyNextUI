% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doc.R, R/feedback.R
\name{popover}
\alias{popover}
\alias{popover_trigger}
\alias{popover_content}
\title{popover}
\usage{
popover(...)

popover_trigger(...)

popover_content(...)
}
\arguments{
\item{...}{Props to pass to the component.
The allowed props are listed below in the \bold{Details} section.}
}
\value{
Object with \code{shiny.tag} class suitable for use in the UI of a Shiny app.
}
\description{
Popover is a non-modal dialog that floats around its disclosure. It's commonly used for displaying additional rich content on top of something.
}
\details{
\itemize{
\item \bold{children*}. Type: \code{ReactNode[]}. Default: NA.
\item \bold{size}. Type: \code{sm | md | lg}. Default: "md".
\item \bold{color}. Type: \code{default | primary | secondary | success | warning | danger}. Default: "default".
\item \bold{radius}. Type: \code{none | sm | md | lg | full}. Default: "lg".
\item \bold{shadow}. Type: \code{none | sm | md | lg}. Default: "lg".
\item \bold{backdrop}. Type: \code{transparent | opaque | blur}. Default: "transparent".
\item \bold{placement}. Type: \code{PopoverPlacement}. Default: "bottom".
\item \bold{state}. Type: \code{OverlayTriggerState}. Default: NA.
\item \bold{isOpen}. Type: \code{boolean}. Default: NA.
\item \bold{defaultOpen}. Type: \code{boolean}. Default: NA.
\item \bold{offset}. Type: \code{number}. Default: "7".
\item \bold{containerPadding}. Type: \code{number}. Default: "12".
\item \bold{crossOffset}. Type: \code{number}. Default: "0".
\item \bold{triggerType}. Type: \code{dialog | menu | listbox | tree | grid}. Default: "dialog".
\item \bold{showArrow}. Type: \code{boolean}. Default: false.
\item \bold{shouldFlip}. Type: \code{boolean}. Default: true.
\item \bold{triggerScaleOnOpen}. Type: \code{boolean}. Default: true.
\item \bold{shouldBlockScroll}. Type: \code{boolean}. Default: false.
\item \bold{shouldCloseOnScroll}. Type: \code{boolean}. Default: false.
\item \bold{isKeyboardDismissDisabled}. Type: \code{boolean}. Default: false.
\item \bold{shouldCloseOnBlur}. Type: \code{boolean}. Default: false.
\item \bold{motionProps}. Type: \code{MotionProps}. Default: NA.
\item \bold{portalContainer}. Type: \code{HTMLElement}. Default: "document.body".
\item \bold{disableAnimation}. Type: \code{boolean}. Default: false.
\item \bold{classNames}. Type: \code{Partial<Record<'base' | 'trigger' | 'backdrop' | 'content', string>>}. Default: NA.
}
\itemize{
\item \bold{onOpenChange}. Type: \code{(isOpen: boolean) => void}. Default: NA.
\item \bold{shouldCloseOnInteractOutside}. Type: \code{(e: HTMLElement) => void}. Default: NA.
\item \bold{onClose}. Type: \code{() => void}. Default: NA.
}
\itemize{
\item \bold{children*}. Type: \code{ReactNode}. Default: NA.
}
\itemize{
\item \bold{children}. Type: \code{ReactNode}. Default: NA.
}
}
\examples{
library(shiny)
library(shinyNextUI)
library(shiny.react)

ui <- nextui_page(
  dark_mode = TRUE,
  div(
    className = "flex align-items-start",
    popover(
      showArrow = TRUE,
      placement = "right",
      backdrop = "blur",
      popover_trigger(button("Click me!", color = "primary")),
      popover_content(
        div(
          className = "px-1 py-2",
          "This is the content of the popover."
        )
      )
    )
  )
)

server <- function(input, output, session) {
}

if (interactive() || is_testing()) shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/components/popover}.
}
