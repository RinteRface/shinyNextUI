% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doc.R, R/inputs.R
\name{textarea}
\alias{textarea}
\alias{textarea_input}
\alias{update_textarea_input}
\title{textarea}
\usage{
textarea_input(inputId, ..., value = default_value)

update_textarea_input(
  session = shiny::getDefaultReactiveDomain(),
  inputId,
  ...
)
}
\arguments{
\item{inputId}{ID of the component.}

\item{...}{Props to pass to the component.
The allowed props are listed below in the \bold{Details} section.}

\item{value}{Starting value.}

\item{session}{Object passed as the \code{session} argument to Shiny server.}
}
\value{
Object with \code{shiny.tag} class suitable for use in the UI of a Shiny app.
The update functions return nothing (called for side effects).
}
\description{
Textarea component is a multi-line Input which allows you to write large texts.
}
\details{
\enumerate{
\item Textarea Props
\itemize{
\item \bold{value}. Textarea value. Type: string. Default: NA.
\item \bold{initialValue}. Textarea default value. Type: string. Default: NA.
\item \bold{placeholder}. The short hint displayed in the textarea. Type: string. Default: NA.
\item \bold{size}. Change textarea size. Type: NormalSizes. Default: medium.
\item \bold{color}. Change textarea text, border and label color. Type: SimpleColors. Default: default.
\item \bold{status}. Change textarea status color. Type: SimpleColors. Default: default.
\item \bold{rows}. Textarea rows count. Type: number. Default: NA.
\item \bold{minRows}. Minimum number of rows to show for textarea. Type: number. Default: 3.
\item \bold{maxRows}. Maximum number of rows up to which the textarea can grow. Type: number. Default: 6.
\item \bold{cacheMeasurements}. Reuse previously computed measurements when computing height of textarea.. Type: boolean. Default: true.
\item \bold{helperColor}. Change helper text color. Type: SimpleColors. Default: default.
\item \bold{required}. Required textarea prop. Type: boolean. Default: false.
\item \bold{readOnly}. It prevents the user from changing the value of the field. Type: boolean. Default: false.
\item \bold{disabled}. Disable textarea. Type: boolean. Default: false.
\item \bold{bordered}. Bordered textarea. Type: boolean. Default: false.
\item \bold{underlined}. Underlined textarea. Type: boolean. Default: false.
\item \bold{shadow}. Enable or disable the textarea shadow. Type: boolean. Default: true.
\item \bold{animated}. Enable or disable the textarea animation. Type: boolean. Default: true.
\item \bold{autoComplete}. HTML textarea autocomplete attribute. Type: string. Default: off.
\item \bold{borderWeight}. Border weight for bordered textarea. Type: NormalWeights. Default: normal.
\item \bold{fullWidth}. If true, the textarea will take up the full width of its container.. Type: boolean. Default: false.
\item \bold{width}. Textarea width. Type: string. Default: initial.
\item \bold{label}. Text label for textarea. Type: string. Default: NA.
\item \bold{labelPlaceholder}. The placeholder becomes a label. Type: string. Default: NA.
\item \bold{helperText}. Add a helper text to textarea. Type: string. Default: NA.
\item \bold{onHeightChange}. Callback fired whenthe textarea height change. Type: (height: number, meta: {rowHeight: number}) => void. Default: NA.
\item \bold{onChange}. Callback fired when the value is changed. Type: (e: React.ChangeEvent\if{html}{\out{<HTMLTextAreaElement>}}) => void. Default: NA.
\item \bold{onFocus}. Callback fired when the textarea is focused.. Type: (e: React.FocusEvent\if{html}{\out{<HTMLTextAreaElement>}}) => void. Default: NA.
\item \bold{onBlur}. Callback fired when the textarea is blurred.. Type: (e: React.FocusEvent\if{html}{\out{<HTMLTextAreaElement>}}) => void. Default: NA.
\item \bold{ref}. forwardRef. Type: Ref<HTMLTextAreaElement | null>. Default: NA.
\item \bold{css}. Override Default CSS style. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs. Type: keyof JSX.IntrinsicElements. Default: input.
\item \bold{...}. Textarea native props. Type: TextareaHTMLAttributes. Default: NA.
}
}
}
\examples{
library(shiny)
library(shinyNextUI)

ui <- nextui_page(
  div(
    class = "flex gap-5",
    action_button("update_text", "Update text"),
    textarea_input(
      inputId = "textarea",
      placeholder = "Enter your amazing ideas.",
      label = "Text area input",
      bordered = TRUE,
      color = "secondary",
      status = "secondary",
      helperColor = "error",
      helperText = "Click on update text"
    )
  ),
  textOutput("textarea_val")
)

server <- function(input, output, session) {
  output$textarea_val <- renderText(input$textarea)

  observeEvent(input$update_text, {
    update_textarea_input(
      inputId = "textarea",
      value = "Updated value"
    )
  })
}

if (interactive() || is_testing()) shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/components/textarea}.
}
