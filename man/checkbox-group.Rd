% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doc.R, R/inputs.R
\name{checkbox-group}
\alias{checkbox-group}
\alias{checkboxgroup_input}
\alias{update_checkboxgroup_input}
\title{checkbox-group}
\usage{
checkboxgroup_input(inputId, ..., choices, selected = NULL)

update_checkboxgroup_input(
  session = shiny::getDefaultReactiveDomain(),
  inputId,
  ...,
  choices = NULL,
  selected = NULL
)
}
\arguments{
\item{inputId}{Unique input id.}

\item{...}{Props.}

\item{choices}{Radio choices.}

\item{selected}{Default selected value.}

\item{session}{Shiny session.}
}
\value{
A radio input tag.
}
\description{
A CheckboxGroup allows users to select one or more items from a list of choices. CheckboxGrup implementation is based on @react-aria/checkbox
}
\details{
\enumerate{
\item Checkbox Group Props
\itemize{
\item \bold{children*}. The Checkboxes contained within the checkbox group.. Type: CheckboxGroupChildren. Default: NA.
\item \bold{label}. The content to display as the label.. Type: ReactNode. Default: NA.
\item \bold{value}. The current value (controlled).. Type: string[]. Default: NA.
\item \bold{defaultValue}. The current value (uncontrolled).. Type: string[]. Default: NA.
\item \bold{name}. The name of the checkbox group, used when submitting an HTML form.. Type: string. Default: NA.
\item \bold{orientation}. The axis the checkbox group items should align with.. Type: horizontal vertical. Default: vertical.
\item \bold{size}. The size of the component. Type: NormalSizes. Default: medium.
\item \bold{color}. The color of the component. Type: NormalColors. Default: default.
\item \bold{labelColor}. The color of the label. Type: SimpleColors. Default: default.
\item \bold{isDisabled}. Whether the checkbox group is disabled. Type: boolean. Default: false.
\item \bold{isReadOnly}. Whether the input can be selected but not changed by the user.. Type: boolean. Default: false.
\item \bold{css}. Override Default CSS style. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs. Type: keyof JSX.IntrinsicElements. Default: div.
}
\item Checkbox Group Events
\itemize{
\item \bold{onChange}. Handler that is called when the value changes. Type: (value: T) => void. Default: NA.
}
\item Checkbox Group Accessibility Props
\itemize{
\item \bold{id}. The element's unique identifier. See MDN. Type: string. Default: NA.
\item \bold{aria-label}. Defines a string value that labels the current element. Type: string. Default: NA.
\item \bold{aria-labelledby}. Identifies the element (or elements) that labels the current element. Type: string. Default: NA.
\item \bold{aria-describedby}. Identifies the element (or elements) that describes the object.. Type: string. Default: NA.
\item \bold{aria-details}. Identifies the element (or elements) that provide a detailed, extended description for the object.. Type: string. Default: NA.
\item \bold{aria-errormessage}. Identifies the element that provides an error message for the object.. Type: string. Default: NA.
}
}
}
\examples{
library(shiny)
library(shinyNextUI)

ui <- nextui_page(
  debug_react = TRUE,
  div(
    class = "flex gap-1",
    select_input(
      "select",
      label = "Tab to select:",
      value = JS("['sydney']"),
      disallowEmptySelection = TRUE,
      selectionMode = "multiple",
      select_item(key = "buenos-aires", value = "buenos-aires", "Buenos Aires"),
      select_item(key = "sydney", value = "sydney", "Sydney")
    ),
    checkboxgroup_input(
      inputId = "checkbox_group",
      label = "Checkbox Group",
      choices = c(
        "buenos-aires" = "Buenos Aires",
        "sydney" = "Sydney"
      ),
      orientation = "horizontal",
      color = "secondary"
    ),
    textOutput("checkbox_group_val")
  )
)

server <- function(input, output, session) {
  observeEvent(input$select, {
    update_checkboxgroup_input(session, "checkbox_group", selected = input$select)
  })
  output$checkbox_group_val <- renderText(input$checkbox_group)
}

if (interactive() || is_testing()) shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/components/checkbox-group}.
}
