% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doc.R, R/inputs.R
\name{switch}
\alias{switch}
\alias{switch_input}
\alias{update_switch_input}
\title{switch}
\usage{
switch_input(inputId, ..., value = default_value)

update_switch_input(session = shiny::getDefaultReactiveDomain(), inputId, ...)
}
\arguments{
\item{inputId}{ID of the component.}

\item{...}{Props to pass to the component.
The allowed props are listed below in the \bold{Details} section.}

\item{value}{Starting value.}

\item{session}{Object passed as the \code{session} argument to Shiny server.}
}
\value{
Object with \code{shiny.tag} class suitable for use in the UI of a Shiny app.
The update functions return nothing (called for side effects).
}
\description{
The Switch component is used as an alternative for the Checkbox component. You can switch between enabled or disabled states.
}
\details{
\enumerate{
\item Switch Props
\itemize{
\item \bold{color}. Change switch color. Type: NormalColors. Default: primary.
\item \bold{size}. Switch size. Type: NormalSizes. Default: medium.
\item \bold{checked}. Selected or not (in single). Type: boolean. Default: false.
\item \bold{initialChecked}. Determine the initial value of the switch. Type: boolean. Default: false.
\item \bold{animated}. Display checkbox animations. Type: boolean. Default: true.
\item \bold{squared}. Squared switch. Type: boolean. Default: false.
\item \bold{shadow}. Display shadow effect. Type: boolean. Default: false.
\item \bold{disabled}. Disable switch. Type: boolean. Default: false.
\item \bold{bordered}. Bordered switch. Type: boolean. Default: false.
\item \bold{icon}. Add an icon for both status on/off. Type: ReactNode. Default: NA.
\item \bold{iconOn}. Add an icon for on status. Type: ReactNode. Default: NA.
\item \bold{iconOff}. Add an icon for off status. Type: ReactNode. Default: NA.
\item \bold{preventDefault}. Prevent default event on when is selected through the Space, Enter keys. Type: boolean. Default: true.
\item \bold{name}. Add a name to the input of the switch.. Type: string. Default: NA.
\item \bold{onChange}. The callback invoked when the checked state of the switch changes.. Type: (e:SwitchEvent) => void. Default: NA.
\item \bold{css}. Override Default CSS style. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs. Type: keyof JSX.IntrinsicElements. Default: div.
\item \bold{...}. Native props. Type: LabelHTMLAttributes. Default: NA.
}
}
}
\examples{
library(shiny)
library(shinyNextUI)

ui <- nextui_page(
  div(
    class = "flex",
    action_button("update", "Toggle switch"),
    spacer(y = 2),
    switch_input(
      inputId = "switch",
      value = TRUE,
      size = "xs",
      shadow = TRUE
    ),
    textOutput("switch_val"),
    spacer(y = 5),
    switch_input(
      "custom_switch",
      classNames = JS(
        "{
          base: NextUI.cn(
            'inline-flex flex-row-reverse w-full max-w-md bg-content1 hover:bg-content2 items-center',
            'justify-between cursor-pointer rounded-lg gap-2 p-4 border-2 border-transparent',
            'data-[selected=true]:border-primary',
          ),
          wrapper: 'p-0 h-4 overflow-visible',
          thumb: NextUI.cn('w-6 h-6 border-2 shadow-lg',
            'group-data-[hover=true]:border-primary',
            //selected
            'group-data-[selected=true]:ml-6',
            // pressed
            'group-data-[pressed=true]:w-7',
            'group-data-[selected]:group-data-[pressed]:ml-4',
          )
        }"
      ),
      div(
        className = "flex flex-col gap-1",
        p(className = "text-medium", "Enable early acces"),
        p(
          className = "text-tiny text-default-400",
         "Get access to new features before they are released."
        )
      )
    )
  )
)

server <- function(input, output, session) {
  output$switch_val <- renderText(input$switch)
  observeEvent(input$update, {
    update_switch_input(session, "switch", value = !input$switch)
  })
}

if (interactive() || is_testing()) shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/components/switch}.
}
