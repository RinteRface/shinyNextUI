% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R, R/doc.R
\name{badge}
\alias{badge}
\title{badge}
\usage{
badge(...)
}
\arguments{
\item{...}{Props to pass to the component.
The allowed props are listed below in the \bold{Details} section.}
}
\value{
Object with \code{shiny.tag} class suitable for use in the UI of a Shiny app.
}
\description{
Badges are used as a small numerical value or status descriptor for UI elements.
}
\details{
\enumerate{
\item Badge Props
\itemize{
\item \bold{children}. The wrapped component.. Type: ReactNode. Default: NA.
\item \bold{content}. The content of the badge. The badge will be rendered relative to its children.. Type: string number ReactNode. Default: NA.
\item \bold{color}. The badge color.. Type: SimpleColors. Default: default.
\item \bold{size}. The badge size.. Type: NormalSizes. Default: md.
\item \bold{variant}. The badge variation.. Type: BadgeVariant. Default: default.
\item \bold{placement}. The placement of the badge content.. Type: BadgePlacements. Default: top-right.
\item \bold{borderWeight}. The border weight for bordered badge variation.. Type: NormalWeights. Default: normal.
\item \bold{shape}. The wrapped shape the badge should overlap.. Type: circle rectangle. Default: rectangle.
\item \bold{horizontalOffset}. The horizontal offset of the badge content.. Type: string number. Default: NA.
\item \bold{verticalOffset}. The vertical offset of the badge content.. Type: string number. Default: NA.
\item \bold{isInvisible}. Whether the badge is invisible.. Type: boolean. Default: false.
\item \bold{enableShadow}. Whether the badge shadow should be enabled.. Type: boolean. Default: false.
\item \bold{isSquared}. Whether the badge corners should be squared.. Type: boolean. Default: false.
\item \bold{disableOutline}. Whether the badge outline should be disabled.. Type: boolean. Default: false.
\item \bold{disableAnimation}. Whether the badge content animation should be disabled.. Type: boolean. Default: false.
\item \bold{css}. Override Default CSS style.. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs.. Type: keyof JSX.IntrinsicElements. Default: span.
}
}
}
\examples{
library(shiny)
library(shinyNextUI)

badge_config <- data.frame(
  size = c(rep("sm", 2), rep("md", 2), rep("lg", 2)),
  color = c(
    "default",
    "primary",
    "secondary",
    "success",
    "warning",
    "danger"
  ),
  disable_outline = c(rep(FALSE, 3), rep(TRUE, 3))
)

variants <- c("solid", "flat", "faded", "shadow")
placement <- c("top-right", "bottom-right", "top-left", "bottom-left")
shape <- c("rectangle", "circle")

badge_factory <- function(size, color, disable_outline) {
  badge(
    class = "mx-5",
    size = size,
    color = color,
    disableOutline = disable_outline,
    content = 1,
    avatar()
  )
}

badges <- purrr::pmap(badge_config, badge_factory)

ui <- nextui_page(
  p(class = "text-teal-300 font-extrabold hover:text-rose-300 text-2xl uppercase my-2", "Badges"),
  div(
    class = "flex flex-row",
    badges
  ),
  spacer(y = 2),
  p(class = "text-teal-300 font-extrabold hover:text-rose-300 text-2xl uppercase my-2", "Badge content"),
  div(
    class = "flex flex-row",
    badge(
      color = "danger",
      content = "New",
      placement = "top-left",
      avatar(
        bordered = TRUE,
        squared = TRUE,
        color = "secondary",
        size = "lg",
        src = "https://i.pravatar.cc/300?u=a042581f4e29026707d"
      )
    )
  ),
  spacer(y = 2),
  p(class = "text-teal-300 font-extrabold hover:text-rose-300 text-2xl uppercase my-2", "Solid variant"),
  div(class = "flex flex-row", badge(variant = "solid", color = "success", size = "lg", content = 5, avatar())),
  spacer(y = 2),
  p(class = "text-teal-300 font-extrabold hover:text-rose-300 text-2xl uppercase my-2", "Flat variant"),
  div(class = "flex flex-row", badge(variant = "flat", color = "success", size = "lg", content = 5, avatar())),
  spacer(y = 2),
  p(class = "text-teal-300 font-extrabold hover:text-rose-300 text-2xl uppercase my-2", "Faded variant"),
  div(class = "flex flex-row", badge(variant = "faded", color = "success", size = "lg", content = 5, avatar())),
  spacer(y = 2),
  p(class = "text-teal-300 font-extrabold hover:text-rose-300 text-2xl uppercase my-2", "Shadow variant"),
  div(class = "flex flex-row", badge(variant = "shadow", color = "success", size = "lg", content = 5, avatar()))
)

server <- function(input, output, session) {}

if (interactive() || is_testing()) shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/components/badge}.
}
