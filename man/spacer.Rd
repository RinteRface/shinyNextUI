% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doc.R, R/layout.R
\name{spacer}
\alias{spacer}
\title{spacer}
\usage{
spacer(...)
}
\arguments{
\item{...}{Props to pass to the component.
The allowed props are listed below in the \bold{Details} section.}
}
\value{
Object with \code{shiny.tag} class suitable for use in the UI of a Shiny app.
}
\description{
Provide empty space.
}
\details{
\enumerate{
\item Spacer Props
\itemize{
\item \bold{x}. x-axis spacing. Type: number / float. Default: 1.
\item \bold{y}. y-axis spacing. Type: number / float. Default: 1.
\item \bold{inline}. inline space. Type: boolean. Default: false.
\item \bold{css}. Override Default CSS style. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs. Type: keyof JSX.IntrinsicElements. Default: div.
\item \bold{...}. native props. Type: HTMLAttributes. Default: NA.
}
}
}
\examples{
library(shiny)
library(shinyNextUI)
library(shiny.react)

ui <- nextui_page(
  card(card_body("Card 1")),
  spacer(y = 10),
  card(card_body("Card 2")),
  spacer(y = 2),
  card(card_body("Card 3")),
  spacer(y = 10),
  div(
    class = "flex",
    card(card_body("Card 4")),
    spacer(x = 5),
    card(card_body("Card 5")),
    spacer(x = 1),
    card(card_body("Card 6"))
  )
)

server <- function(input, output, session) {}

if (interactive() || is_testing()) shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/layout/spacer}.
}
