% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R, R/doc.R
\name{card}
\alias{card}
\alias{card_body}
\alias{card_header}
\alias{card_footer}
\title{card}
\usage{
card(...)

card_body(...)

card_header(...)

card_footer(...)
}
\arguments{
\item{...}{Props to pass to the component.
The allowed props are listed below in the \bold{Details} section.}
}
\value{
Object with \code{shiny.tag} class suitable for use in the UI of a Shiny app.
}
\description{
Card is a container for text, photos, and actions in the context of a single subject.
}
\details{
\enumerate{
\item Card Props
\itemize{
\item \bold{children*}. The content of the card. It's usually the header, body, and footer.. Type: ReactNode ReactNode[]. Default: NA.
\item \bold{variant}. The card variant style.. Type: CardVariants. Default: shadow.
\item \bold{borderWeight}. The border weight of the bordered card.. Type: NormalWeights. Default: light.
\item \bold{isHoverable}. Whether the card can be hovered by the user.. Type: boolean. Default: false.
\item \bold{isPressable}. Whether the card should allow users to interact with the card.. Type: boolean. Default: false.
\item \bold{disableAnimation}. Whether the card is animated.. Type: boolean. Default: false.
\item \bold{disableRipple}. Whether the card should show a ripple animation on press. Type: boolean. Default: false.
\item \bold{allowTextSelectionOnPress}. Whether the card should allow text selection on press. (only for pressable cards). Type: boolean. Default: true.
\item \bold{css}. Override Default CSS style.. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs.. Type: keyof JSX.IntrinsicElements. Default: div.
}
\item Card Events
\itemize{
\item \bold{onPress}. Handler that is called when the press is released over the target.. Type: (e: PressEvent) => void. Default: NA.
\item \bold{onPressStart}. Handler that is called when a press interaction starts.. Type: (e: PressEvent) => void. Default: NA.
\item \bold{onPressEnd}. Handler that is called when a press interaction ends, either over the target or when the pointer leaves the target.. Type: (e: PressEvent) => void. Default: NA.
\item \bold{onPressChange}. Handler that is called when the press state changes.. Type: (isPressed: boolean) => void. Default: NA.
\item \bold{onPressUp}. Handler that is called when a press is released over the target, regardless of whether it started on the target or not.. Type: (e: PressEvent) => void. Default: NA.
}
\item Card.Header Props
\itemize{
\item \bold{css}. Override Default CSS style. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs. Type: keyof JSX.IntrinsicElements. Default: div.
}
\item Card.Body Props
\itemize{
\item \bold{css}. Override Default CSS style. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs. Type: keyof JSX.IntrinsicElements. Default: div.
}
\item Card.Footer Props
\itemize{
\item \bold{isBlurred}. Whether the card footer background should be blurry.. Type: boolean. Default: false.
\item \bold{css}. Override Default CSS style. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs. Type: keyof JSX.IntrinsicElements. Default: div.
}
\item Card.Image Props
\itemize{
\item \bold{ImageProps}. NA. Type: ImageProps. Default: NA.
}
}
}
\examples{
library(shiny)
library(shinyNextUI)
library(shiny.react)

ui <- nextui_page(
  div(
    class = "grid gap-4 grid-cols-3 grid-rows-3 m-5",
    card(card_body("Simple card without anything")),
    card(
      variant = "bordered",
      card_header("Card title"),
      divider(),
      card_body(h1("Card body")),
      divider(),
      card_footer("Card Footer")
    ),
    card(
      #isBlurred = TRUE,
      isPressable = TRUE,
      onPress = JS("() => alert('You pressed me')"),
      shadow = "sm",
      className = "border-none bg-background/60 dark:bg-default-100/50 max-w-[610px]",
      card_body("Simple card without anything")
    )
  )
)

server <- function(input, output, session) {

}

if (interactive() || is_testing()) shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/components/card}.
}
