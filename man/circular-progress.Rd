% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R, R/doc.R
\name{circular_progress}
\alias{circular_progress}
\alias{circular-progress}
\title{circular-progress}
\usage{
circular_progress(...)
}
\arguments{
\item{...}{Props to pass to the component.
The allowed props are listed below in the \bold{Details} section.}
}
\value{
Object with \code{shiny.tag} class suitable for use in the UI of a Shiny app.
}
\description{
Circular progress indicators are utilized to indicate an undetermined wait period or visually represent the duration of a process.
}
\details{
\itemize{
\item \bold{label}. The content to display as the label.. Type: ReactNode. Default: NA.
\item \bold{size}. The size of the indicator.. Type: sm | md | lg. Default: md.
\item \bold{color}. The color of the indicator.. Type: default | primary | secondary | success | warning | danger. Default: primary.
\item \bold{value}. The current value (controlled).. Type: number. Default: NA.
\item \bold{valueLabel}. The content to display as the value's label (e.g. 1 of 4).. Type: ReactNode. Default: NA.
\item \bold{minValue}. The smallest value allowed for the input.. Type: number. Default: 0.
\item \bold{maxValue}. The largest value allowed for the input.. Type: number. Default: 100.
\item \bold{formatOptions}. The options to format the value.. Type: Intl.NumberFormat. Default: {style: 'percent'}.
\item \bold{isIndeterminate}. Whether the progress is indeterminate.. Type: boolean. Default: true.
\item \bold{showValueLabel}. Whether to show the value label.. Type: boolean. Default: true.
\item \bold{strokeWidth}. The width of the progress stroke.. Type: number. Default: 2.
\item \bold{isDisabled}. Whether the progress is disabled.. Type: boolean. Default: false.
\item \bold{disableAnimation}. Whether to disable the animation.. Type: boolean. Default: false.
\item \bold{classNames}. Allows to set custom class names for the circular progress slots.. Type: Record<"base"｜"svgWrapper"｜"svg"｜"track"｜"indicator"｜"value"｜"label", string>. Default: NA.
}
}
\examples{
library(shiny)

ui <- nextui_page(
  dark_mode = TRUE,
  div(
    class = "flex gap-4",
    card(
      class = "",
      card_body(
        class = "grid grid-cols-2 gap-4",
        circular_progress(
          value = 3,
          showValueLabel = TRUE,
          strokeWidth = 4,
          size = "lg",
          minValue = 0,
          maxValue = 150,
          valueLabel = div(icon("battery-full", class = "mx-1"), "2\%"),
          color = "danger"
        ),
        circular_progress(
          value = 120,
          showValueLabel = TRUE,
          strokeWidth = 4,
          size = "lg",
          minValue = 0,
          maxValue = 150,
          valueLabel = div(icon("mobile-screen-button", class = "mx-1"), "80\%"),
          color = "success"
        )
      )
    )
  )
)

server <- function(input, output, session) {

}

shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/components/circular-progress}.
}
