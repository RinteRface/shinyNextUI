% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R, R/doc.R
\name{avatar}
\alias{avatar}
\alias{avatar_group}
\title{avatar}
\usage{
avatar(...)

avatar_group(...)
}
\arguments{
\item{...}{Props to pass to the component.
The allowed props are listed below in the \bold{Details} section.}
}
\value{
Object with \code{shiny.tag} class suitable for use in the UI of a Shiny app.
}
\description{
The Avatar component is used to represent a user, and displays the profile picture, initials or fallback icon.
}
\details{
\itemize{
\item \bold{src}. Type: \code{string}. Default: NA.
\item \bold{color}. Type: \code{default | primary | secondary | success | warning | danger}. Default: "default".
\item \bold{radius}. Type: \code{none | sm | md | lg | full}. Default: "full".
\item \bold{size}. Type: \code{sm | md | lg}. Default: "md".
\item \bold{name}. Type: \code{string}. Default: NA.
\item \bold{icon}. Type: \code{ReactNode}. Default: NA.
\item \bold{fallback}. Type: \code{ReactNode}. Default: NA.
\item \bold{isBordered}. Type: \code{boolean}. Default: false.
\item \bold{isDisabled}. Type: \code{boolean}. Default: false.
\item \bold{isFocusable}. Type: \code{boolean}. Default: false.
\item \bold{showFallback}. Type: \code{boolean}. Default: false.
\item \bold{ImgComponent}. Type: \code{React.ElementType}. Default: "img".
\item \bold{imgProps}. Type: \code{ImgComponentProps}. Default: NA.
\item \bold{classNames}. Type: \code{Partial<Record<"base" | "img" | "fallback" | "name" | "icon", string>>}. Default: NA.
}
\itemize{
\item \bold{max}. Type: \code{number}. Default: "5".
\item \bold{total}. Type: \code{number}. Default: NA.
\item \bold{size}. Type: \code{AvatarProps['size']}. Default: NA.
\item \bold{color}. Type: \code{AvatarProps['color']}. Default: NA.
\item \bold{radius}. Type: \code{AvatarProps['radius']}. Default: NA.
\item \bold{isGrid}. Type: \code{boolean}. Default: false.
\item \bold{isDisabled}. Type: \code{boolean}. Default: NA.
\item \bold{isBordered}. Type: \code{boolean}. Default: NA.
\item \bold{renderCount}. Type: \code{(count: number) => ReactNode}. Default: NA.
\item \bold{classNames}. Type: \code{Partial<Record<"base" | "count", string>>}. Default: NA.
}
}
\examples{
library(shiny)
library(shinyNextUI)

avatar_config <- data.frame(
  size = c("xs", "sm", "md", "lg", "xl"),
  src = c(
    "https://i.pravatar.cc/150?u=a042581f4e29026024d",
    "https://i.pravatar.cc/150?u=a042581f4e29026704d",
    "https://i.pravatar.cc/150?u=a04258114e29026702d",
    "https://i.pravatar.cc/150?u=a048581f4e29026701d",
    "https://i.pravatar.cc/150?u=a092581d4ef9026700d"
  ),
  radius = c(rep("full", 2), "lg", "md", "sm"),
  disabled = c(rep(FALSE, 4), TRUE),
  bordered = c(rep(TRUE, 3), rep(FALSE, 2)),
  color = c(
    "primary",
    "secondary",
    "danger",
    "success",
    "warning"
  ),
  fallback = rep(TRUE, 5)
)

avatar_factory <- function(src, size, disabled, bordered, radius, color, fallback) {
  avatar(
    src = src,
    size = size,
    isDisabled = disabled,
    isBordered = bordered,
    radius = radius,
    color = color,
    showFallback = fallback
  )
}

avatars <- purrr::pmap(avatar_config, avatar_factory)

ui <- nextui_page(
  debug_react = TRUE,
  class = "container mx-auto px-4",
  p("avatar()"),
  spacer(y = 1),
  div(
    class = "flex gap-3 items-center",
    avatars
  ),
  spacer(y = 2),
  p("avatar_group()"),
  spacer(y = 1),
  div(
    class = "flex",
    avatar_group(
      isBordered = TRUE,
      max = 3,
      total = 10,
      lapply(avatar_config$src, function(link) avatar(src = link))
    )
  )
)

server <- function(input, output, session) {}

if (interactive() || is_testing()) shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/components/avatar}.
}
