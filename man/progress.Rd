% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R, R/doc.R
\name{progress}
\alias{progress}
\title{progress}
\usage{
progress(...)
}
\arguments{
\item{...}{Props to pass to the component.
The allowed props are listed below in the \bold{Details} section.}
}
\value{
Object with \code{shiny.tag} class suitable for use in the UI of a Shiny app.
}
\description{
The Progress component allows you to view the progress of any activity.
}
\details{
\enumerate{
\item Progress Props
\itemize{
\item \bold{value}. Current value. Type: number. Default: NA.
\item \bold{min}. Progress min value. Type: number. Default: 0.
\item \bold{max}. Progress max value. Type: number. Default: 100.
\item \bold{color}. Change filler bar color. Type: NormalColors. Default: default.
\item \bold{status}. Change filler bar background color. Type: NormalColors. Default: default.
\item \bold{size}. Change progress size. Type: NormalSizes. Default: medium.
\item \bold{striped}. Stripe over the progress bar's background color. Type: boolean. Default: false.
\item \bold{indeterminated}. Indeterminated progress. Type: boolean. Default: false.
\item \bold{shadow}. Display shadow effect. Type: boolean. Default: false.
\item \bold{squared}. Squared progress. Type: boolean. Default: false.
\item \bold{animated}. Enable or disable the progress animation. Type: boolean. Default: true.
\item \bold{css}. Override Default CSS style. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs. Type: keyof JSX.IntrinsicElements. Default: div.
\item \bold{...}. Progress native props. Type: ProgressHTMLAttributes. Default: NA.
}
}
}
\examples{
library(shiny)
library(shinyNextUI)

progress <- shinyNextUI:::component("Progress")
colors <- c(
  "primary",
  "secondary",
  "success",
  "warning",
  "error",
  "gradient"
)

bool_par <- c(rep(FALSE, 3), rep(TRUE, 2), FALSE)

progress_config <- data.frame(
  size = c("xs", "sm", rep("md", 2), "lg", "xl"),
  color = colors,
  status = colors,
  shadow = bool_par,
  striped = bool_par,
  squared = bool_par
)

progress_factory <- function(size, color, status, shadow, striped, squared) {
  grid(
    progress(
      value = round(runif(1, 0, 100)),
      size = size,
      color = color,
      status = status,
      shadow = shadow,
      striped = striped,
      squared = squared
    )
  )
}

progresses <- purrr::pmap(progress_config, progress_factory)

ui <- nextui_page(
  text("Progress"),
  grid_container(
    gap = 2,
    xs = 12,
    sm = 6,
    progresses
  )
)

server <- function(input, output, session) {}

if (interactive() || is_testing()) shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/components/progress}.
}
