% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R, R/doc.R
\name{link}
\alias{link}
\title{link}
\usage{
link(...)
}
\arguments{
\item{...}{Props to pass to the component.
The allowed props are listed below in the \bold{Details} section.}
}
\value{
Object with \code{shiny.tag} class suitable for use in the UI of a Shiny app.
}
\description{
Links allow users to click their way from page to page. This component is styled to resemble a hyperlink and semantically renders an \if{html}{\out{<a>}}
}
\details{
\itemize{
\item \bold{size}. Type: \code{sm | md | lg}. Default: "md".
\item \bold{color}. Type: \code{foreground | primary | secondary | success | warning | danger}. Default: "primary".
\item \bold{underline}. Type: \code{none | hover | always | active | focus}. Default: "none".
\item \bold{href}. Type: \code{string}. Default: NA.
\item \bold{target}. Type: \code{HTMLAttributeAnchorTarget}. Default: NA.
\item \bold{rel}. Type: \code{string}. Default: NA.
\item \bold{download}. Type: \code{boolean | string}. Default: NA.
\item \bold{ping}. Type: \code{string}. Default: NA.
\item \bold{referrerPolicy}. Type: \code{HTMLAttributeReferrerPolicy}. Default: NA.
\item \bold{isExternal}. Type: \code{boolean}. Default: false.
\item \bold{showAnchorIcon}. Type: \code{boolean}. Default: false.
\item \bold{anchorIcon}. Type: \code{ReactNode}. Default: NA.
\item \bold{isBlock}. Type: \code{boolean}. Default: false.
\item \bold{isDisabled}. Type: \code{boolean}. Default: false.
\item \bold{disableAnimation}. Type: \code{boolean}. Default: false.
}
\itemize{
\item \bold{onPress}. Type: \code{(e: PressEvent) => void}. Default: NA.
\item \bold{onPressStart}. Type: \code{(e: PressEvent) => void}. Default: NA.
\item \bold{onPressEnd}. Type: \code{(e: PressEvent) => void}. Default: NA.
\item \bold{onPressChange}. Type: \code{(isPressed: boolean) => void}. Default: NA.
\item \bold{onPressUp}. Type: \code{(e: PressEvent) => void}. Default: NA.
\item \bold{onKeyDown}. Type: \code{(e: KeyboardEvent) => void}. Default: NA.
\item \bold{onKeyUp}. Type: \code{(e: KeyboardEvent) => void}. Default: NA.
\item \bold{onClick}. Type: \code{MouseEventHandler}. Default: NA.
}
}
\examples{
library(shiny)
library(shinyNextUI)

colors <- c(
  "default",
  "primary",
  "secondary",
  "success",
  "warning",
  "error"
)

link_config <- data.frame(
  color = colors,
  underline = c(rep("none", 2), "hover", "always", "active", "focus"),
  block = c(rep(TRUE, 3), rep(FALSE, 3)),
  href = c(rep("#", 3), rep("https://google.com", 3)),
  isExternal = c(rep(FALSE, 3), rep(TRUE, 3)),
  size = rep(c("sm", "md", "lg"), 2)
)

link_factory <- function(color, underline, block, href, isExternal, size) {
  link(
    "A super link!",
    color = color,
    underline = underline,
    isBlock = block,
    href = href,
    isExternal = isExternal,
    size = size
  )
}

links <- purrr::pmap(link_config, link_factory)

ui <- nextui_page(
  div(
    class = "grid gap-4 grid-cols-3 grid-rows-2 m-5",
    links
  )
)

server <- function(input, output, session) {}

if (interactive() || is_testing()) shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/components/link}.
}
