% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doc.R, R/layout.R
\name{navbar}
\alias{navbar}
\alias{navbar_brand}
\alias{navbar_content}
\alias{navbar_item}
\alias{navbar_link}
\alias{navbar_toggle}
\alias{navbar_collapse}
\alias{navbar_collapse_item}
\title{navbar}
\usage{
navbar(inputId, ..., value = default_value)

navbar_brand(...)

navbar_content(...)

navbar_item(...)

navbar_link(...)

navbar_toggle(...)

navbar_collapse(...)

navbar_collapse_item(...)
}
\arguments{
\item{inputId}{ID of the component.}

\item{...}{Props to pass to the component.
The allowed props are listed below in the \bold{Details} section.}

\item{value}{Starting value.}
}
\value{
Object with \code{shiny.tag} class suitable for use in the UI of a Shiny app.
The update functions return nothing (called for side effects).
}
\description{
A responsive navigation header positioned on top side of your page that includes support for branding, links, navigation, collapse and more.
}
\details{
\enumerate{
\item Navbar Props
\itemize{
\item \bold{children*}. The content of the navbar. It's usually the brand, content, toggle and collapse.. Type: ReactNode ReactNode[]. Default: NA.
\item \bold{parentRef}. The parent element where the navbar is placed within. This is used to determine the scroll position and whether the navbar should be hidden or not.. Type: RefObject\if{html}{\out{<HTMLElement>}}. Default: window.
\item \bold{variant}. The navbar positions variantions.. Type: NavbarVariants. Default: static.
\item \bold{height}. The height of the navbar. When the navbar is compacted (isCompact=true) the height is reduced to 54px.. Type: number string. Default: 76px.
\item \bold{maxWidth}. The navbar maximum width.. Type: NavbarMaxWidth. Default: lg.
\item \bold{isBordered}. Whether the navbar should be bordered.. Type: boolean. Default: false.
\item \bold{isCompact}. Whether the navbar should be compact. It reduces the height to 54px.. Type: boolean. Default: false.
\item \bold{borderWeight}. The border weight of the bordered navbar.. Type: NormalWeights. Default: light.
\item \bold{shouldHideOnScroll}. Whether the navbar should hide on scroll or not.. Type: boolean. Default: false.
\item \bold{disableShadow}. Whether the navbar should have a shadow or not.. Type: boolean. Default: false.
\item \bold{disableBlur}. Whether the navbar should be blurred or not. (only supported by this browser list. Type: boolean. Default: false.
\item \bold{disableScrollHandler}. Whether the navbar parent scroll event should be listened to or not.. Type: boolean. Default: false.
\item \bold{containerCss}. The css object of the navbar container.. Type: Stitches.CSS. Default: NA.
\item \bold{css}. Override Default CSS style.. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs.. Type: keyof JSX.IntrinsicElements. Default: nav.
}
\item Navbar Events
\itemize{
\item \bold{onScrollPositionChange}. The scroll event handler for the navbar. The event fires when the navbar parent element is scrolled. it only works if disableScrollHandler is set to false or shouldHideOnScroll is set to true.. Type: (scrollPosition: number) => void. Default: NA.
}
\item Navbar.Brand Props
\itemize{
\item \bold{children}. The content of the navbar brand. It's usually the logo and name of the brand.. Type: ReactNode ReactNode[]. Default: NA.
\item \bold{hideIn}. Sets the breakpoint from where the component should start hiding.. Type: HideShowIn. Default: NA.
\item \bold{showIn}. Sets the breakpoint from where the component should start displaying.. Type: HideShowIn. Default: NA.
\item \bold{css}. Override Default CSS style.. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs.. Type: keyof JSX.IntrinsicElements. Default: span.
}
\item Navbar.Content Props
\itemize{
\item \bold{children}. The content of the navbar content. It's usually the navbar item and navbar link.. Type: ReactNode ReactNode[]. Default: NA.
\item \bold{variant}. The variant of the navbar content items.. Type: NavbarContentVariants. Default: default.
\item \bold{gap}. The gap between each content item. It's 0px for highlight variants.. Type: number string CSSGapUnit. Default: $10.
\item \bold{activeColor}. The active color of the navbar content items.. Type: SimpleColors. Default: default (link).
\item \bold{underlineHeight}. The height of the navbar content items's underline.. Type: NormalWeights. Default: normal.
\item \bold{enableCursorHighlight}. Whether the navbar content highlighted cursor should be visible.. Type: NormalWeights. Default: false.
\item \bold{isCursorHighlightRounded}. Whether the navbar content highlighted cursor should be rounded.. Type: NormalWeights. Default: false.
\item \bold{hideIn}. Sets the breakpoint from where the component should start hiding.. Type: HideShowIn. Default: NA.
\item \bold{showIn}. Sets the breakpoint from where the component should start displaying.. Type: HideShowIn. Default: NA.
\item \bold{css}. Override Default CSS style.. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs.. Type: keyof JSX.IntrinsicElements. Default: ul.
}
\item Navbar.Item Props
\itemize{
\item \bold{children*}. The contents of the navbar item.. Type: ReactNode. Default: NA.
\item \bold{variant}. The variant of the navbar item.. Type: NavbarContentVariants. Default: default.
\item \bold{activeColor}. The active color of the navbar item.. Type: SimpleColors. Default: default (link).
\item \bold{underlineHeight}. The height of the navbar item underline.. Type: NormalWeights. Default: normal.
\item \bold{isActive}. Whether navbar item is active.. Type: boolean. Default: false.
\item \bold{isDisabled}. Whether navbar item is disabled.. Type: boolean. Default: false.
\item \bold{hideIn}. Sets the breakpoint from where the component should start hiding.. Type: HideShowIn. Default: NA.
\item \bold{showIn}. Sets the breakpoint from where the component should start displaying.. Type: HideShowIn. Default: NA.
\item \bold{css}. Override Default CSS style.. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs.. Type: keyof JSX.IntrinsicElements. Default: li.
}
\item Navbar.Link Props
\itemize{
\item \bold{ItemProps}. Since dropdown navbar link is based on the Navbar.Item component you can use any of the Navbar.Item props.. Type: NavbarItemProps. Default: NA.
\item \bold{LinkProps}. Since dropdown navbar link uses the Link component as a base, you can use any of the Link props.. Type: LinkProps. Default: NA.
\item \bold{itemCss}. Override the navbar item CSS style.. Type: Stitches.CSS. Default: NA.
\item \bold{itemClassName}. Add a class name to the navbar item.. Type: string. Default: NA.
\item \bold{css}. Override Default CSS style.. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs.. Type: keyof JSX.IntrinsicElements. Default: a.
}
\item Navbar.Toggle Props
\itemize{
\item \bold{children}. The contents of the navbar toggle. It's usually an hamburguer icon button.. Type: ReactNode. Default: NA.
\item \bold{isSelected}. Whether the element should be selected (controlled).. Type: HideShowIn. Default: false.
\item \bold{defaultSelected}. Whether the element should be selected (uncontrolled).. Type: HideShowIn. Default: NA.
\item \bold{autoFocus}. Whether the element should receive focus on render.. Type: HideShowIn. Default: false.
\item \bold{hideIn}. Sets the breakpoint from where the component should start hiding.. Type: HideShowIn. Default: NA.
\item \bold{showIn}. Sets the breakpoint from where the component should start displaying.. Type: HideShowIn. Default: NA.
\item \bold{css}. Override Default CSS style.. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs.. Type: keyof JSX.IntrinsicElements. Default: button.
}
\item Navbar.Toggle Events
\itemize{
\item \bold{onChange}. Handler that is called when the element's selection state changes.. Type: (isSelected: boolean) => void. Default: NA.
}
\item Navbar.Toggle Accessibility Props
\itemize{
\item \bold{id}. The element's unique identifier. See MDN. Type: string. Default: NA.
\item \bold{aria-label}. Defines a string value that labels the current element. Type: string. Default: NA.
}
\item Navbar.Collapse Props
\itemize{
\item \bold{children}. The contents of the navbar toggle. It's usually an hamburguer icon button.. Type: ReactNode ReactNode[]. Default: NA.
\item \bold{transitionDelay}. The delay of all collapse items transition. (milliseconds). Type: number. Default: 0.
\item \bold{transitionTime}. The delay of all collapse items transition. (milliseconds). Type: number. Default: 450.
\item \bold{transitionMatrix}. The matrix of all collapse items transition.. Type: CollapseTransitionMatrix. Default: {in: "matrix(1, 0, 0, 1, 0, 0)", out: "matrix(0.97, 0, 0, 1, 0, 20)"}.
\item \bold{disableAnimation}. Whether the all navbar collapse items are animated.. Type: boolean. Default: false.
\item \bold{hideIn}. Sets the breakpoint from where the component should start hiding.. Type: HideShowIn. Default: NA.
\item \bold{showIn}. Sets the breakpoint from where the component should start displaying.. Type: HideShowIn. Default: NA.
\item \bold{css}. Override Default CSS style.. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs.. Type: keyof JSX.IntrinsicElements. Default: ul.
}
\item Navbar.Collapse Accessibility Props
\itemize{
\item \bold{id}. The element's unique identifier. See MDN. Type: string. Default: NA.
\item \bold{aria-labelledby}. Identifies the element (or elements) that labels the current element. Type: string. Default: NA.
\item \bold{aria-describedby}. Identifies the element (or elements) that describes the object.. Type: string. Default: NA.
}
\item Navbar.CollapseItem Props
\itemize{
\item \bold{children}. The contents of the navbar toggle. It's usually an hamburguer icon button.. Type: ReactNode ReactNode[]. Default: NA.
\item \bold{transitionDelay}. The delay of all collapse items transition. (milliseconds). Type: number. Default: 0.
\item \bold{transitionTime}. The delay of all collapse items transition. (milliseconds). Type: number. Default: 450.
\item \bold{transitionMatrix}. The matrix of all collapse items transition.. Type: CollapseTransitionMatrix. Default: {in: "matrix(1, 0, 0, 1, 0, 0)", out: "matrix(0.97, 0, 0, 1, 0, 20)"}.
\item \bold{disableAnimation}. Whether the navbar collapse item is animated.. Type: boolean. Default: false.
\item \bold{hideIn}. Sets the breakpoint from where the component should start hiding.. Type: HideShowIn. Default: NA.
\item \bold{showIn}. Sets the breakpoint from where the component should start displaying.. Type: HideShowIn. Default: NA.
\item \bold{css}. Override Default CSS style.. Type: Stitches.CSS. Default: NA.
\item \bold{as}. Changes which tag component outputs.. Type: keyof JSX.IntrinsicElements. Default: li.
}
}
}
\examples{
library(shiny)
library(shinyNextUI)
library(shiny.react)

links <- lapply(1:4, function(i) {
  navbar_link(
    href = "#",
    sprintf("Link \%s", i),
    onClick = JS("(e) => console.log(e)"),
    isActive = if (i == 1) TRUE
  )
})


navbar_layout <- function(...) {
  tags$div(
    css = JS("{maxW: '100\%', boxSizing: 'border-box'}"),
    ...
  )
}

content <- function(...) {
  tags$div(
    css = JS("{px: '$12', mt: '$8', '@xsMax': {px: '$10'}}"),
    ...
  )
}

ui <- nextui_page(
  navbar_layout(
    navbar(
      inputId = "navbar",
      maxWidth = "fluid",
      #css = JS("{ maxW: '100\%' }"),
      isBordered = TRUE,
      navbar_brand(text(b = TRUE, "Brand", color = "inherit", hideIn = "xs")),
      navbar_content(
        variant = "highlight",
        activeColor = "primary",
        enableCursorHighlight = TRUE,
        hideIn = "xs",
        links,
        navbar_item(
          action_button(
            inputId = "navbar_button",
            "Click me",
            auto = TRUE,
            flat = TRUE
          )
        )
      )
    ),
    content(
      theme_switcher(),
      text(
        size = "$lg",
        "Lorem ipsum dolor sit amet
    Lorem ipsum dolor sit amet, consectetur adipiscing elit,
    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
    Purus gravida quis blandit turpis. Augue neque gravida in fermentum
    et sollicitudin ac orci. Et sollicitudin ac orci phasellus egestas.
    Elementum tempus egestas sed sed risus pretium quam vulputate.
    Interdum velit euismod in pellentesque massa placerat duis ultricies.
    Rhoncus mattis rhoncus urna neque viverra justo nec ultrices dui.
    Praesent semper feugiat nibh sed pulvinar. Ultrices gravida dictum
    fusce ut placerat orci nulla pellentesque. Malesuada proin libero
    nunc consequat interdum varius sit amet. Lectus quam id leo in vitae.
    Sed viverra tellus in hac habitasse platea dictumst. Vivamus at augue
    eget arcu. Augue mauris augue neque gravida in.
    Tincidunt vitae semper quis lectus nulla at volutpat diam.
    Gravida dictum fusce ut placerat. Erat velit scelerisque in dictum non.
    Tempus quam pellentesque nec nam aliquam sem et tortor consequat.
    Eu nisl nunc mi ipsum faucibus. Cras fermentum odio eu feugiat pretium nibh.
    Vel pharetra vel turpis nunc eget lorem dolor sed viverra.
    Sollicitudin tempor id eu nisl nunc mi ipsum faucibus.
    Sed id semper risus in hendrerit gravida rutrum. Eget nulla facilisi
    etiam dignissim. Erat imperdiet sed euismod nisi. Risus in hendrerit
    gravida rutrum quisque non tellus orci ac.
    Tempor orci dapibus ultrices in iaculis nunc sed augue lacus.
    In pellentesque massa placerat duis ultricies. Sit amet massa vitae
    tortor condimentum. Morbi tincidunt augue interdum velit euismod.
    Aliquet enim tortor at auctor urna nunc id. A scelerisque purus semper eget.
    Vitae justo eget magna fermentum iaculis. Arcu non odio euismod lacinia
    at quis. Et leo duis ut diam quam nulla porttitor massa. Eget nunc
    scelerisque viverra mauris. Suscipit tellus mauris a diam maecenas
    sed enim. Cras sed felis eget velit aliquet. Est placerat in egestas
    erat imperdiet sed euismod nisi porta. In ante metus dictum at tempor
    commodo. In cursus turpis massa tincidunt dui ut ornare lectus. Tempus
    iaculis urna id volutpat. Iaculis eu non diam phasellus vestibulum lorem
    sed risus.
    Ridiculus mus mauris vitae ultricies leo integer malesuada nunc vel.
    Imperdiet massa tincidunt nunc pulvinar sapien et ligula ullamcorper
    malesuada. Faucibus pulvinar elementum integer enim neque volutpat.
    Gravida arcu ac tortor dignissim convallis aenean. Lectus quam id leo in
    vitae. Ultricies tristique nulla aliquet enim tortor. Nec tincidunt
    praesent semper feugiat nibh sed. Imperdiet proin fermentum leo vel orci
    porta non pulvinar neque. Praesent semper feugiat nibh sed pulvinar proin
    gravida. Dis parturient montes nascetur ridiculus mus mauris. Rhoncus dolor
    purus non enim praesent elementum facilisis leo vel. Ut lectus arcu bibendum
    at. Integer enim neque volutpat ac. Diam sit amet nisl suscipit. Eros donec
    ac odio tempor orci dapibus ultrices in iaculis. Ullamcorper a lacus
    vestibulum sed arcu non odio euismod. Quis lectus nulla at volutpat diam ut.
    Turpis egestas integer eget aliquet. Adipiscing tristique risus nec feugiat
    in fermentum posuere. Morbi tempus iaculis urna id. Amet commodo nulla
    facilisi nullam vehicula ipsum a arcu.
    Rhoncus mattis rhoncus urna neque viverra justo nec ultrices dui. Praesent
    semper feugiat nibh sed pulvinar. Ultrices gravida dictum fusce ut placerat
    orci nulla pellentesque. Malesuada proin libero nunc consequat interdum
    varius sit amet. Lectus quam id leo in vitae. Sed viverra tellus in hac
    habitasse platea dictumst. Vivamus at augue eget arcu. Augue mauris augue
    neque gravida in.
    Tincidunt vitae semper quis lectus nulla at volutpat diam. Gravida dictum
    fusce ut placerat. Erat velit scelerisque in dictum non. Tempus quam
    pellentesque nec nam aliquam sem et tortor consequat. Eu nisl nunc mi
    ipsum faucibus. Cras fermentum odio eu feugiat pretium nibh. Vel pharetra
    vel turpis nunc eget lorem dolor sed viverra. Sollicitudin tempor id eu
    nisl nunc mi ipsum faucibus. Sed id semper risus in hendrerit gravida
    rutrum. Eget nulla facilisi etiam dignissim. Erat imperdiet sed euismod
    nisi. Risus in hendrerit gravida rutrum quisque non tellus orci ac."
      )
    )
  )
)

server <- function(input, output, session) {
  observe(print(input$navbar))
}

if (interactive() || is_testing()) shinyApp(ui, server)
}
\seealso{
See \url{https://nextui.org/docs/components/navbar}.
}
